{"ast":null,"code":"import supabaseClient from'../client';export class SupabaseProjectRepository{async getAll(){const{data,error}=await supabaseClient.from('projects').select('*').order('created_at',{ascending:false});if(error){console.error('Error fetching projects:',error);throw new Error('Failed to fetch projects');}return data.map(item=>({id:item.id,title:item.title,description:item.description,technologies:item.technologies,imageUrl:item.image_url,githubUrl:item.github_url||undefined,liveUrl:item.live_url||undefined}));}async getById(id){const{data,error}=await supabaseClient.from('projects').select('*').eq('id',id).single();if(error){console.error(`Error fetching project with id ${id}:`,error);return null;}return{id:data.id,title:data.title,description:data.description,technologies:data.technologies,imageUrl:data.image_url,githubUrl:data.github_url||undefined,liveUrl:data.live_url||undefined};}async create(project){const{data,error}=await supabaseClient.from('projects').insert({title:project.title,description:project.description,technologies:project.technologies,image_url:project.imageUrl,github_url:project.githubUrl,live_url:project.liveUrl}).select().single();if(error){console.error('Error creating project:',error);throw new Error('Failed to create project');}return{id:data.id,title:data.title,description:data.description,technologies:data.technologies,imageUrl:data.image_url,githubUrl:data.github_url||undefined,liveUrl:data.live_url||undefined};}async update(id,project){const updateData={};if(project.title!==undefined)updateData.title=project.title;if(project.description!==undefined)updateData.description=project.description;if(project.technologies!==undefined)updateData.technologies=project.technologies;if(project.imageUrl!==undefined)updateData.image_url=project.imageUrl;if(project.githubUrl!==undefined)updateData.github_url=project.githubUrl;if(project.liveUrl!==undefined)updateData.live_url=project.liveUrl;const{data,error}=await supabaseClient.from('projects').update(updateData).eq('id',id).select().single();if(error){console.error(`Error updating project with id ${id}:`,error);return null;}return{id:data.id,title:data.title,description:data.description,technologies:data.technologies,imageUrl:data.image_url,githubUrl:data.github_url||undefined,liveUrl:data.live_url||undefined};}async delete(id){const{error}=await supabaseClient.from('projects').delete().eq('id',id);if(error){console.error(`Error deleting project with id ${id}:`,error);return false;}return true;}}// Export a singleton instance\nexport const projectRepository=new SupabaseProjectRepository();","map":{"version":3,"names":["supabaseClient","SupabaseProjectRepository","getAll","data","error","from","select","order","ascending","console","Error","map","item","id","title","description","technologies","imageUrl","image_url","githubUrl","github_url","undefined","liveUrl","live_url","getById","eq","single","create","project","insert","update","updateData","delete","projectRepository"],"sources":["C:/MyPortfolioWeb/portfolio/src/infrastructure/supabase/repositories/projectRepository.ts"],"sourcesContent":["import { Project } from '../../../core/entities';\r\nimport { ProjectRepository } from '../../../core/repositories';\r\nimport supabaseClient from '../client';\r\n\r\nexport class SupabaseProjectRepository implements ProjectRepository {\r\n  async getAll(): Promise<Project[]> {\r\n    const { data, error } = await supabaseClient\r\n      .from('projects')\r\n      .select('*')\r\n      .order('created_at', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('Error fetching projects:', error);\r\n      throw new Error('Failed to fetch projects');\r\n    }\r\n\r\n    return data.map(item => ({\r\n      id: item.id,\r\n      title: item.title,\r\n      description: item.description,\r\n      technologies: item.technologies,\r\n      imageUrl: item.image_url,\r\n      githubUrl: item.github_url || undefined,\r\n      liveUrl: item.live_url || undefined\r\n    }));\r\n  }\r\n\r\n  async getById(id: string): Promise<Project | null> {\r\n    const { data, error } = await supabaseClient\r\n      .from('projects')\r\n      .select('*')\r\n      .eq('id', id)\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error(`Error fetching project with id ${id}:`, error);\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      id: data.id,\r\n      title: data.title,\r\n      description: data.description,\r\n      technologies: data.technologies,\r\n      imageUrl: data.image_url,\r\n      githubUrl: data.github_url || undefined,\r\n      liveUrl: data.live_url || undefined\r\n    };\r\n  }\r\n\r\n  async create(project: Omit<Project, 'id'>): Promise<Project> {\r\n    const { data, error } = await supabaseClient\r\n      .from('projects')\r\n      .insert({\r\n        title: project.title,\r\n        description: project.description,\r\n        technologies: project.technologies,\r\n        image_url: project.imageUrl,\r\n        github_url: project.githubUrl,\r\n        live_url: project.liveUrl\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error creating project:', error);\r\n      throw new Error('Failed to create project');\r\n    }\r\n\r\n    return {\r\n      id: data.id,\r\n      title: data.title,\r\n      description: data.description,\r\n      technologies: data.technologies,\r\n      imageUrl: data.image_url,\r\n      githubUrl: data.github_url || undefined,\r\n      liveUrl: data.live_url || undefined\r\n    };\r\n  }\r\n\r\n  async update(id: string, project: Partial<Project>): Promise<Project | null> {\r\n    const updateData: any = {};\r\n    \r\n    if (project.title !== undefined) updateData.title = project.title;\r\n    if (project.description !== undefined) updateData.description = project.description;\r\n    if (project.technologies !== undefined) updateData.technologies = project.technologies;\r\n    if (project.imageUrl !== undefined) updateData.image_url = project.imageUrl;\r\n    if (project.githubUrl !== undefined) updateData.github_url = project.githubUrl;\r\n    if (project.liveUrl !== undefined) updateData.live_url = project.liveUrl;\r\n\r\n    const { data, error } = await supabaseClient\r\n      .from('projects')\r\n      .update(updateData)\r\n      .eq('id', id)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error(`Error updating project with id ${id}:`, error);\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      id: data.id,\r\n      title: data.title,\r\n      description: data.description,\r\n      technologies: data.technologies,\r\n      imageUrl: data.image_url,\r\n      githubUrl: data.github_url || undefined,\r\n      liveUrl: data.live_url || undefined\r\n    };\r\n  }\r\n\r\n  async delete(id: string): Promise<boolean> {\r\n    const { error } = await supabaseClient\r\n      .from('projects')\r\n      .delete()\r\n      .eq('id', id);\r\n\r\n    if (error) {\r\n      console.error(`Error deleting project with id ${id}:`, error);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\n// Export a singleton instance\r\nexport const projectRepository = new SupabaseProjectRepository();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}