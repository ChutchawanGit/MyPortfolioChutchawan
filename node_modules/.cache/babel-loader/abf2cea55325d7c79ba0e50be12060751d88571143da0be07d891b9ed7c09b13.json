{"ast":null,"code":"import React,{useEffect,useRef}from'react';import*as THREE from'three';import{jsx as _jsx}from\"react/jsx-runtime\";const SnowBackground=_ref=>{let{count=1000,depth=50,color='#ffffff'}=_ref;const containerRef=useRef(null);const animationFrameId=useRef(null);useEffect(()=>{if(!containerRef.current)return;// Scene setup\nconst scene=new THREE.Scene();const camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,0.1,1000);const renderer=new THREE.WebGLRenderer({alpha:true,antialias:true});renderer.setSize(window.innerWidth,window.innerHeight);renderer.setClearColor(0x000000,0);containerRef.current.appendChild(renderer.domElement);camera.position.z=20;// Create snow particles\nconst particles=new THREE.BufferGeometry();const positions=[];const velocities=[];for(let i=0;i<count;i++){// Random position within a box\nconst x=Math.random()*window.innerWidth-window.innerWidth/2;const y=Math.random()*window.innerHeight-window.innerHeight/2;const z=Math.random()*depth-depth/2;positions.push(x,y,z);// Random velocity\nconst vx=Math.random()*0.05-0.025;const vy=Math.random()*-0.1-0.05;// Falling down\nconst vz=Math.random()*0.05-0.025;velocities.push(vx,vy,vz);}particles.setAttribute('position',new THREE.Float32BufferAttribute(positions,3));// Create material\nconst material=new THREE.PointsMaterial({color:color,size:0.5,transparent:true,opacity:0.8,blending:THREE.AdditiveBlending,sizeAttenuation:true});// Create points system\nconst snow=new THREE.Points(particles,material);scene.add(snow);// Handle window resize\nconst handleResize=()=>{camera.aspect=window.innerWidth/window.innerHeight;camera.updateProjectionMatrix();renderer.setSize(window.innerWidth,window.innerHeight);};window.addEventListener('resize',handleResize);// Animation loop\nconst animate=()=>{const positions=particles.getAttribute('position').array;for(let i=0;i<positions.length;i+=3){// Update position based on velocity\npositions[i]+=velocities[i];// x\npositions[i+1]+=velocities[i+1];// y\npositions[i+2]+=velocities[i+2];// z\n// Reset particles that go out of view\nif(positions[i+1]<-window.innerHeight/2){positions[i]=Math.random()*window.innerWidth-window.innerWidth/2;positions[i+1]=window.innerHeight/2;positions[i+2]=Math.random()*depth-depth/2;}// Add some swirl\npositions[i]+=Math.sin(positions[i+1]*0.01)*0.1;}particles.getAttribute('position').needsUpdate=true;snow.rotation.y+=0.001;renderer.render(scene,camera);animationFrameId.current=requestAnimationFrame(animate);};animate();// Cleanup function\nreturn()=>{if(animationFrameId.current!==null){cancelAnimationFrame(animationFrameId.current);}if(containerRef.current&&containerRef.current.contains(renderer.domElement)){containerRef.current.removeChild(renderer.domElement);}window.removeEventListener('resize',handleResize);// Dispose resources\nparticles.dispose();material.dispose();};},[count,depth,color]);return/*#__PURE__*/_jsx(\"div\",{ref:containerRef,className:\"absolute inset-0 z-0\"});};export default SnowBackground;","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsx","_jsx","SnowBackground","_ref","count","depth","color","containerRef","animationFrameId","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","alpha","antialias","setSize","setClearColor","appendChild","domElement","position","z","particles","BufferGeometry","positions","velocities","i","x","Math","random","y","push","vx","vy","vz","setAttribute","Float32BufferAttribute","material","PointsMaterial","size","transparent","opacity","blending","AdditiveBlending","sizeAttenuation","snow","Points","add","handleResize","aspect","updateProjectionMatrix","addEventListener","animate","getAttribute","array","length","sin","needsUpdate","rotation","render","requestAnimationFrame","cancelAnimationFrame","contains","removeChild","removeEventListener","dispose","ref","className"],"sources":["C:/MyPortfolioWeb/portfolio/src/interface/components/common/SnowBackground.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\n\r\ninterface SnowBackgroundProps {\r\n  count?: number;\r\n  depth?: number;\r\n  color?: string;\r\n}\r\n\r\nconst SnowBackground: React.FC<SnowBackgroundProps> = ({ \r\n  count = 1000, \r\n  depth = 50, \r\n  color = '#ffffff' \r\n}) => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const animationFrameId = useRef<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!containerRef.current) return;\r\n\r\n    // Scene setup\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\r\n    \r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setClearColor(0x000000, 0);\r\n    containerRef.current.appendChild(renderer.domElement);\r\n    \r\n    camera.position.z = 20;\r\n\r\n    // Create snow particles\r\n    const particles = new THREE.BufferGeometry();\r\n    const positions: number[] = [];\r\n    const velocities: number[] = [];\r\n    \r\n    for (let i = 0; i < count; i++) {\r\n      // Random position within a box\r\n      const x = Math.random() * window.innerWidth - window.innerWidth / 2;\r\n      const y = Math.random() * window.innerHeight - window.innerHeight / 2;\r\n      const z = Math.random() * depth - depth / 2;\r\n      \r\n      positions.push(x, y, z);\r\n\r\n      // Random velocity\r\n      const vx = Math.random() * 0.05 - 0.025;\r\n      const vy = Math.random() * -0.1 - 0.05; // Falling down\r\n      const vz = Math.random() * 0.05 - 0.025;\r\n      \r\n      velocities.push(vx, vy, vz);\r\n    }\r\n    \r\n    particles.setAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\r\n    \r\n    // Create material\r\n    const material = new THREE.PointsMaterial({\r\n      color: color,\r\n      size: 0.5,\r\n      transparent: true,\r\n      opacity: 0.8,\r\n      blending: THREE.AdditiveBlending,\r\n      sizeAttenuation: true\r\n    });\r\n    \r\n    // Create points system\r\n    const snow = new THREE.Points(particles, material);\r\n    scene.add(snow);\r\n\r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Animation loop\r\n    const animate = () => {\r\n      const positions = particles.getAttribute('position').array as Float32Array;\r\n      \r\n      for (let i = 0; i < positions.length; i += 3) {\r\n        // Update position based on velocity\r\n        positions[i] += velocities[i]; // x\r\n        positions[i + 1] += velocities[i + 1]; // y\r\n        positions[i + 2] += velocities[i + 2]; // z\r\n\r\n        // Reset particles that go out of view\r\n        if (positions[i + 1] < -window.innerHeight / 2) {\r\n          positions[i] = Math.random() * window.innerWidth - window.innerWidth / 2;\r\n          positions[i + 1] = window.innerHeight / 2;\r\n          positions[i + 2] = Math.random() * depth - depth / 2;\r\n        }\r\n\r\n        // Add some swirl\r\n        positions[i] += Math.sin(positions[i + 1] * 0.01) * 0.1;\r\n      }\r\n\r\n      particles.getAttribute('position').needsUpdate = true;\r\n      \r\n      snow.rotation.y += 0.001;\r\n      \r\n      renderer.render(scene, camera);\r\n      animationFrameId.current = requestAnimationFrame(animate);\r\n    };\r\n\r\n    animate();\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      if (animationFrameId.current !== null) {\r\n        cancelAnimationFrame(animationFrameId.current);\r\n      }\r\n      \r\n      if (containerRef.current && containerRef.current.contains(renderer.domElement)) {\r\n        containerRef.current.removeChild(renderer.domElement);\r\n      }\r\n      \r\n      window.removeEventListener('resize', handleResize);\r\n      \r\n      // Dispose resources\r\n      particles.dispose();\r\n      material.dispose();\r\n    };\r\n  }, [count, depth, color]);\r\n\r\n  return <div ref={containerRef} className=\"absolute inset-0 z-0\" />;\r\n};\r\n\r\nexport default SnowBackground;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}